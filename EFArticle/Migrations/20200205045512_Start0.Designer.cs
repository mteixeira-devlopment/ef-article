// <auto-generated />
using System;
using EFArticle.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFArticle.Migrations
{
    [DbContext(typeof(EfArticleDbContext))]
    [Migration("20200205045512_Start0")]
    partial class Start0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFArticle.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("number")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("street")
                        .HasColumnType("VARCHAR(120)");

                    b.Property<Guid>("_personId")
                        .HasColumnName("id_person")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("_personId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("EFArticle.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(120)");

                    b.HasKey("Id");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("EFArticle.Entities.Address", b =>
                {
                    b.HasOne("EFArticle.Entities.Person", null)
                        .WithMany("Address")
                        .HasForeignKey("_personId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EFArticle.Entities.Person", b =>
                {
                    b.OwnsOne("EFArticle.Entities.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("UNIQUEIDENTIFIER");

                            b1.Property<string>("DriveLicence")
                                .HasColumnName("doc_drive_licence")
                                .HasColumnType("VARCHAR(20)");

                            b1.Property<string>("UniqueIdentifierRegister")
                                .IsRequired()
                                .HasColumnName("doc_unique_identifier_register")
                                .HasColumnType("VARCHAR(11)");

                            b1.HasKey("PersonId");

                            b1.ToTable("persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
